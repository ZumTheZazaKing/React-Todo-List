{"version":3,"sources":["index.js","firebase.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","AddTaskForm","props","useState","value","setValue","className","onSubmit","e","handleSubmit","preventDefault","type","max","placeholder","onChange","target","required","TaskList","deleteTask","ogInnerHTML","parentNode","innerHTML","indexToCutTo","indexOf","slicedInnerHTML","slice","handleClick","listItems","data","map","val","onClick","mainOn","Main","tasks","setTasks","docRef","collection","doc","currentUser","uid","setFirebaseValues","useEffect","get","then","exists","set","id","width","height","src","photoURL","alt","displayName","SignOut","addition","update","subtraction","copiedArray","indexToDelete","splice","SignIn","provider","GoogleAuthProvider","signInWithPopup","signOut","App","useAuthState","user","el","ReactDOM","render","document","getElementById"],"mappings":"4NAYAA,IAASC,cCZqB,CAC1BC,OAAQ,0CACRC,WAAY,kCACZC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBDOnB,IAAMC,EAAOT,IAASS,OAChBC,EAAYV,IAASU,YAG3B,SAASC,EAAYC,GAEnB,MAAwBC,mBAAS,IAAjC,mBAAKC,EAAL,KAAYC,EAAZ,KAQA,OAAO,qBAAKC,UAAU,OAAf,SAEL,uBAAMC,SAAU,SAAAC,GAAMN,EAAMO,aAAaL,GAAQC,EAAS,IAAKG,EAAEE,kBAAjE,UAEE,uBAAOC,KAAK,OAAOC,IAAK,GAAIC,YAAY,eAAeT,MAAOA,EAAOU,SAVzE,SAAsBN,GAEpBH,EAASG,EAAEO,OAAOX,QAQ6EY,UAAQ,IACrG,uBAAOL,KAAK,SAASP,MAAM,WASjC,SAASa,EAASf,GAEhB,SAASgB,EAAWV,GAClB,IAAIW,EAAcX,EAAEO,OAAOK,WAAWC,UAClCC,EAAeH,EAAYI,QAAQ,WACnCC,EAAkBL,EAAYM,MAAM,EAAGH,GAE3CpB,EAAMwB,YAAYF,GAGpB,IACIG,EADMzB,EAAM0B,KACIC,KAAI,SAAAC,GAAG,OAAI,qBAAIxB,UAAU,GAAd,UAAkBwB,EAAI,wBAAQC,QAASb,EAAjB,SAA6B,mBAAGZ,UAAU,0BAG/F,OAAO,qBAAKA,UAAU,OAAf,SAEL,6BAAKqB,MAMT,IAAIK,GAAS,EAEb,SAASC,IAEPD,GAAS,EAGT,MAAwB7B,mBAAS,IAAjC,mBAAK+B,EAAL,KAAYC,EAAZ,KAEIC,EAASpC,EAAUqC,WAAW,SAASC,IAAIvC,EAAKwC,YAAYC,KAEhE,SAASC,EAAkBb,GACzBO,EAASP,GA+BX,OA5BAc,qBAAU,WACRN,EAAOO,MAAMC,MAAK,SAAAN,GACbA,EAAIO,QAGLT,EAAOU,IAAI,CAACZ,MAAM,KAFlBE,EAAOO,MAAMC,MAAK,SAAAhB,GAAI,OAAIa,EAAkBb,EAAKA,OAAOM,eAM5D,CAACF,IAmBI,sBAAK1B,UAAU,YAAf,UAEL,sBAAKyC,GAAG,aAAR,UACE,sBAAKA,GAAG,cAAR,UACE,qBAAKC,MAAM,KAAKC,OAAO,KAAKC,IAAKnD,EAAKwC,YAAYY,SAAUC,IAAI,OAChE,yCAAYrD,EAAKwC,YAAYc,kBAE/B,cAACC,EAAD,OAEF,uBACA,2CAEA,cAACrD,EAAD,CAAaQ,aA5Bf,SAAkB8C,GAChBpB,EAAS,GAAD,mBAAKD,GAAL,CAAYqB,KACpBnB,EAAOoB,OAAO,CAACtB,MAAM,GAAD,mBAAKA,GAAL,CAAYqB,SA2BhC,uBACA,cAACtC,EAAD,CAAUW,KAAMM,EAAOR,YAzBzB,SAAqB+B,GACnB,IAAIC,EAAW,YAAOxB,GAClByB,EAAgBD,EAAYnC,QAAQkC,GAGxCC,EAAYE,OAAOD,EAAe,GAClCvB,EAAOoB,OAAO,CAACtB,MAAMwB,IACrBvB,EAASuB,MAmBT,0BAQJ,SAASG,IAOP,OAAO,sBAAKd,GAAG,SAAR,UACH,2CACA,wFACA,wBAAQhB,QARa,WACrB,IAAM+B,EAAW,IAAIxE,IAASS,KAAKgE,mBACnChE,EAAKiE,gBAAgBF,IAMrB,oCAMN,SAASR,IACP,OAAOvD,EAAKwC,aACR,wBAAQQ,GAAG,UAAUhB,QAAS,kBAAMhC,EAAKkE,WAAzC,sBAKN,SAASC,IAEP,MAAeC,YAAapE,GAArBqE,EAAP,oBAEA,OAAO,8BACJA,EAAO,cAACnC,EAAD,IAAU,cAAC4B,EAAD,MAKtB,IAAIQ,EAAK,cAACH,EAAD,IAETI,IAASC,OAAOF,EAAIG,SAASC,eAAe,W","file":"static/js/main.1bf98a78.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\n\nimport { firebaseConfig } from './firebase';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\n\nfirebase.initializeApp(firebaseConfig);\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\n\nfunction AddTaskForm(props){\n\n  let [value, setValue] = useState(\"\");\n\n  function handleChange(e){\n\n    setValue(e.target.value);\n\n  }\n\n  return <div className=\"form\">\n\n    <form onSubmit={e => {props.handleSubmit(value); setValue(\"\"); e.preventDefault()}}>\n\n      <input type=\"text\" max={40} placeholder=\"Max 40 words\" value={value} onChange={handleChange} required/>\n      <input type=\"submit\" value=\"+\"/>\n\n    </form>\n\n  </div>\n\n}\n\n\nfunction TaskList(props){\n\n  function deleteTask(e){\n    let ogInnerHTML = e.target.parentNode.innerHTML;\n    let indexToCutTo = ogInnerHTML.indexOf(\"<button\");\n    let slicedInnerHTML = ogInnerHTML.slice(0, indexToCutTo);\n\n    props.handleClick(slicedInnerHTML);\n  }\n\n  let arr = props.data;\n  let listItems = arr.map(val => <li className=\"\">{val}<button onClick={deleteTask}><i className=\"fa fa-trash-o\"></i></button></li>);\n\n\n  return <div className=\"list\">\n\n    <ul>{listItems}</ul>\n\n  </div>\n\n}\n\nlet mainOn = false;\n\nfunction Main(){\n  \n  mainOn = true;\n\n\n  let [tasks, setTasks] = useState([]);\n\n  let docRef = firestore.collection(\"users\").doc(auth.currentUser.uid);\n\n  function setFirebaseValues(data){\n    setTasks(data);\n  }\n\n  useEffect(() => {\n    docRef.get().then(doc => {\n      if(doc.exists){\n        docRef.get().then(data => setFirebaseValues(data.data().tasks));\n      } else {\n        docRef.set({tasks:[]});\n        docRef.get().then(data => setFirebaseValues(data.data().tasks));\n      }\n    })\n  },[mainOn])\n\n\n  function addTasks(addition){\n    setTasks([...tasks, addition])\n    docRef.update({tasks:[...tasks, addition]})\n  }\n\n  function removeTasks(subtraction){\n    let copiedArray = [...tasks];\n    let indexToDelete = copiedArray.indexOf(subtraction);\n\n    \n    copiedArray.splice(indexToDelete, 1);\n    docRef.update({tasks:copiedArray});\n    setTasks(copiedArray);\n  }\n  \n\n  return <div className=\"container\">\n\n    <div id=\"displayAcc\">\n      <div id=\"mainDetails\">\n        <img width=\"50\" height=\"50\" src={auth.currentUser.photoURL} alt=\"pp\"/>\n        <h4>Hello, {auth.currentUser.displayName}</h4>\n      </div>\n      <SignOut/>\n    </div>\n    <br/>\n    <h2>ToDo List</h2>\n\n    <AddTaskForm handleSubmit={addTasks}/>\n    <br />\n    <TaskList data={tasks} handleClick={removeTasks}/>\n    <br/>\n    \n\n  </div>\n  \n\n}\n\nfunction SignIn(){\n\n  const signInWithGoogle = () => {\n      const provider = new firebase.auth.GoogleAuthProvider();\n      auth.signInWithPopup(provider);\n  }\n\n  return <div id=\"signIn\">\n      <h2>ToDo List</h2>\n      <p>Make sure you keep all your tasks inline with this app!</p>\n      <button onClick={signInWithGoogle}>Sign In With Google</button>\n  </div>\n\n}\n\n\nfunction SignOut(){\n  return auth.currentUser && (\n      <button id=\"signOut\" onClick={() => auth.signOut()}>Sign Out</button>\n  )\n}\n\n\nfunction App(){\n\n  const [user] = useAuthState(auth);\n\n  return <div>\n    {user ? <Main/> : <SignIn/>}\n  </div>\n}\n\n\nlet el = <App />\n\nReactDOM.render(el, document.getElementById('root'));\n","export const firebaseConfig = {\n    apiKey: \"AIzaSyArq5t7Tr9xIcbMOdIhOI3Al6zHjb4Lk78\",\n    authDomain: \"todo-list-1c383.firebaseapp.com\",\n    projectId: \"todo-list-1c383\",\n    storageBucket: \"todo-list-1c383.appspot.com\",\n    messagingSenderId: \"705596377676\",\n    appId: \"1:705596377676:web:703e336c7cd6030418c2e9\",\n    measurementId: \"G-NQWR8L8RQV\"\n}"],"sourceRoot":""}